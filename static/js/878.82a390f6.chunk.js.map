{"version":3,"file":"static/js/878.82a390f6.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginartor\":\"Paginator_paginartor__mj0Vu\",\"item\":\"Paginator_item__bPCTT\",\"selectedPage\":\"Paginator_selectedPage__CRNLp\"};","import React, { useEffect, useState } from \"react\";\nimport s from './Paginator.module.css'\n\nconst Paginator = (props) => {\n    let portionSize = 10;\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize\n    let onNextButtonClick = () => {\n        if (portionNumber < portionCount)\n        setPortionNumber(portionNumber + 1)\n    }\n    let onPrevButtonClick = () => {\n        if (portionNumber > 1)\n        setPortionNumber(portionNumber - 1)\n    }\n    return (\n        <div className={s.paginartor}>\n            <div className={s.item} onClick={() => {\n                setPortionNumber(1)\n                props.requestUsers(1, props.pageSize)\n            }}>First</div>\n            { <div className={s.item} disabled={portionNumber === 1} onClick={onPrevButtonClick}>{'<'}</div>}\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <div key={p} className={s.item + ' ' + (props.currentPage === p ? s.selectedPage : '')}\n                        onClick={(e) => { props.onPageChanged(p); }}>{p}</div>\n                })}\n            {<div className={s.item} disabled={portionNumber == portionCount} onClick={onNextButtonClick}>{'>'}</div> }\n            <div className={s.item} onClick={() => {\n                setPortionNumber(portionCount)\n                props.requestUsers(portionCount, props.pageSize)\n            }}>Last</div>\n        </div>\n    )\n}\n\n\nexport default Paginator;","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"Users_users__oN5Ju\",\"userPhoto\":\"Users_userPhoto__wCV7+\"};","import React from \"react\";\nimport s from './Users.module.css'\nimport userPhoto from '../../assets/images/user.png';\nimport { NavLink } from \"react-router-dom\";\n\nconst User = (props) => {\n    return (\n            <div>\n                <span>\n                    <div>\n                        <NavLink to={`/profile/` + props.user.id}>\n                            <img src={props.user.photos.small != null ? props.user.photos.small : userPhoto} className={s.userPhoto}></img>\n                        </NavLink>\n                    </div>\n                    <div>\n                        {props.user.followed\n                            ? <button disabled={props.followingInProgress\n                                .some(id => id === props.user.id)}\n                                onClick={() => { props.unfollow(props.user.id) }}>Unfollow</button>\n                            : <button disabled={props.followingInProgress\n                                .some(id => id === props.user.id)}\n                                onClick={() => { props.follow(props.user.id) }}>Follow</button>}\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{props.user.name}</div>\n                        <div>{props.user.status}</div>\n\n                    </span>\n                    <span>\n                        <div>{'u.location.country'}</div>\n                        <div>{'u.location.city'}</div>\n                    </span>\n                </span>\n            </div>\n    )\n}\n\nexport default User;","import React from \"react\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\nimport s from './Users.module.css'\n\nconst Users = (props) => {\n    return (\n        <div className={s.users}>\n            <Paginator  \n                setCurrentPage={props.setCurrentPage}\n                requestUsers={props.requestUsers} \n                totalItemsCount={props.totalUsersCount} \n                pageSize={props.pageSize} \n                currentPage={props.currentPage} \n                onPageChanged={props.onPageChanged}/>\n            <div>\n                {props.users.map(u => <User\n                    followingInProgress={props.followingInProgress}\n                    unfollow={props.unfollow}\n                    follow={props.follow}\n                    user={u} />)}\n            </div>\n        </div>\n    )\n}\n\nexport default Users;","export const getUsers = (state) => {\n    return state.usersPage.users\n}\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\nexport const getPortionSize = (state) => {\n    return state.usersPage.portionSize\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n}","import React from \"react\";\nimport Users from './Users'\nimport { connect } from \"react-redux\";\nimport { followSuccess, setCurrentPage, unfollowSuccess, toggleIsFollowingInProgress, requestUsers, follow, unfollow} from \"../../redux/users-reducer\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, getPortionSize} from \"../../redux/users-selectors\"\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize)\n    }\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n        return (\n           <> \n           <Users \n            users={this.props.users} \n            currentPage={this.props.currentPage} \n            totalUsersCount={this.props.totalUsersCount} \n            pageSize={this.props.pageSize}\n            onPageChanged={this.onPageChanged}\n            requestUsers={this.props.requestUsers}\n            followingInProgress={this.props.followingInProgress}\n            follow={this.props.follow}\n            setCurrentPage={this.props.setCurrentPage}\n            unfollow={this.props.unfollow}/>\n            {this.props.isFetching ? <Preloader/> : null}\n            </>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n      users: getUsers(state),\n      pageSize: getPageSize(state),\n      totalUsersCount: getTotalUsersCount(state),\n      currentPage: getCurrentPage(state),\n      isFetching: getIsFetching(state),\n      followingInProgress: getFollowingInProgress(state),\n    }\n  }\n\nexport default compose(\n    connect(mapStateToProps, {followSuccess, unfollowSuccess, setCurrentPage, toggleIsFollowingInProgress, requestUsers, follow, unfollow})\n)(UsersContainer)  "],"names":["props","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","requestUsers","disabled","filter","p","map","currentPage","e","onPageChanged","to","user","id","src","photos","small","userPhoto","followed","followingInProgress","some","unfollow","follow","name","status","setCurrentPage","totalUsersCount","users","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","compose","connect","followSuccess","unfollowSuccess","toggleIsFollowingInProgress"],"sourceRoot":""}