{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/common/Paginator/Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport s from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginator = props => {\n  _s();\n\n  let portionSize = 10;\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i < pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / props.portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  let onNextButtonClick = () => {\n    setPortionNumber(portionNumber + 1);\n  };\n\n  let onPrevButtonClick = () => {\n    setPortionNumber(portionNumber - 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.paginartor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.item,\n      disabled: portionNumber === 1,\n      onClick: onPrevButtonClick,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: '<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.item + ' ' + (props.currentPage === p ? s.selectedPage : ''),\n        onClick: e => {\n          props.onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.item,\n      disabled: portionNumber == portionCount,\n      onClick: onNextButtonClick,\n      children: '>'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"8p8zb1vvZvsuWyQQS16DuuzsJLU=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useEffect","useState","s","Paginator","props","portionSize","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onNextButtonClick","onPrevButtonClick","paginartor","item","filter","p","map","currentPage","selectedPage","e","onPageChanged"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,eAAN,GAAwBL,KAAK,CAACM,QAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAApB,EAAgCM,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGF,KAAK,CAACC,WAA7B,CAAnB;AACA,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBV,WAAtB,GAAoC,CAAhE;AACA,MAAIa,sBAAsB,GAAGH,aAAa,GAAGV,WAA7C;;AACA,MAAIc,iBAAiB,GAAG,MAAM;AAC1BH,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGA,MAAIK,iBAAiB,GAAG,MAAM;AAC1BJ,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAEb,CAAC,CAACmB,UAAlB;AAAA,4BACM;AAAK,MAAA,SAAS,EAAEnB,CAAC,CAACoB,IAAlB;AAAwB,MAAA,QAAQ,EAAEP,aAAa,KAAK,CAApD;AAAuD,MAAA,OAAO,EAAEK,iBAAhE;AAAA,6BACM;AAAA,kBAAO;AAAP;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADN,EAIST,KAAK,CAACY,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIP,qBAAL,IAA8BO,CAAC,IAAIN,sBAArD,EACAO,GADA,CACKD,CAAD,IAAO;AACR,0BAAO;AAAa,QAAA,SAAS,EAAEtB,CAAC,CAACoB,IAAF,GAAS,GAAT,IAAgBlB,KAAK,CAACsB,WAAN,KAAsBF,CAAtB,GAA0BtB,CAAC,CAACyB,YAA5B,GAA2C,EAA3D,CAAxB;AACH,QAAA,OAAO,EAAGC,CAAD,IAAO;AAAExB,UAAAA,KAAK,CAACyB,aAAN,CAAoBL,CAApB;AAAyB,SADxC;AAAA,kBAC2CA;AAD3C,SAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJA,CAJT,eASK;AAAK,MAAA,SAAS,EAAEtB,CAAC,CAACoB,IAAlB;AAAwB,MAAA,QAAQ,EAAEP,aAAa,IAAID,YAAnD;AAAiE,MAAA,OAAO,EAAEK,iBAA1E;AAAA,gBAA8F;AAA9F;AAAA;AAAA;AAAA;AAAA,YATL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA9BD;;GAAMhB,S;;KAAAA,S;AAiCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport s from './Paginator.module.css'\n\nconst Paginator = (props) => {\n    let portionSize = 10;\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize\n    let onNextButtonClick = () => {\n        setPortionNumber(portionNumber + 1)\n    }\n    let onPrevButtonClick = () => {\n        setPortionNumber(portionNumber - 1)\n    }\n    return (\n        <div className={s.paginartor}>\n            { <div className={s.item} disabled={portionNumber === 1} onClick={onPrevButtonClick}>\n                    <span>{'<'}</span>\n                </div>}\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <div key={p} className={s.item + ' ' + (props.currentPage === p ? s.selectedPage : '')}\n                        onClick={(e) => { props.onPageChanged(p); }}>{p}</div>\n                })}\n            {<div className={s.item} disabled={portionNumber == portionCount} onClick={onNextButtonClick}>{'>'}</div> }\n        </div>\n    )\n}\n\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}