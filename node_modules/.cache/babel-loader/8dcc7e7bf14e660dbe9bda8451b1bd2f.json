{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let dialogsElements = props.dialogsPage.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    id: d.id,\n    name: d.name,\n    img: d.img,\n    status: d.status\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 62\n  }, this));\n  let messagesElements = props.dialogsPage.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message,\n    img: props.dialogsPage.dialogs.img\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 64\n  }, this));\n  let newMessageElement = /*#__PURE__*/React.createRef();\n\n  let sendMessage = () => {\n    let action = {\n      type: 'SEND-MESSAGE'\n    };\n    props.dispatch(action);\n  };\n\n  let onMessageChange = () => {\n    let text = newMessageElement.current.value;\n    let action = {\n      type: 'UPDATE-NEW-MESSAGE-TEXT',\n      text: text\n    };\n    props.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.writeMessages,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: onMessageChange,\n          ref: newMessageElement,\n          value: props.dialogsPage.newMessageText,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.message,\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","NavLink","DialogItem","Message","s","Dialogs","props","dialogsElements","dialogsPage","dialogs","map","d","id","name","img","status","messagesElements","messages","m","message","newMessageElement","createRef","sendMessage","action","type","dispatch","onMessageChange","text","current","value","dialogsItems","writeMessages","newMessageText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,CAAP,MAAc,sBAAd;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,MAAIC,eAAe,GAAGD,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8BC,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,EAAE,EAAEA,CAAC,CAACC,EAAlB;AAAsB,IAAA,IAAI,EAAED,CAAC,CAACE,IAA9B;AAAoC,IAAA,GAAG,EAAEF,CAAC,CAACG,GAA3C;AAAgD,IAAA,MAAM,EAAEH,CAAC,CAACI;AAA1D;AAAA;AAAA;AAAA;AAAA,UAAnC,CAAtB;AAEA,MAAIC,gBAAgB,GAAGV,KAAK,CAACE,WAAN,CAAkBS,QAAlB,CAA2BP,GAA3B,CAA+BQ,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAACC,OAApB;AAA6B,IAAA,GAAG,EAAEb,KAAK,CAACE,WAAN,CAAkBC,OAAlB,CAA0BK;AAA5D;AAAA;AAAA;AAAA;AAAA,UAApC,CAAvB;AACA,MAAIM,iBAAiB,gBAAGpB,KAAK,CAACqB,SAAN,EAAxB;;AACA,MAAIC,WAAW,GAAG,MAAM;AACpB,QAAIC,MAAM,GAAG;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AACAlB,IAAAA,KAAK,CAACmB,QAAN,CAAeF,MAAf;AACH,GAHD;;AAIA,MAAIG,eAAe,GAAG,MAAM;AACxB,QAAIC,IAAI,GAAGP,iBAAiB,CAACQ,OAAlB,CAA0BC,KAArC;AACA,QAAIN,MAAM,GAAG;AAACC,MAAAA,IAAI,EAAE,yBAAP;AAAkCG,MAAAA,IAAI,EAAEA;AAAxC,KAAb;AACArB,IAAAA,KAAK,CAACmB,QAAN,CAAeF,MAAf;AACH,GAJD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEnB,CAAC,CAACK,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,CAAC,CAAC0B,YAAlB;AAAA,gBACKvB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEH,CAAC,CAACa,QAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEb,CAAC,CAAC2B,aAAlB;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,QAAQ,EAAEI,eAAjB;AAAkC,UAAA,GAAG,EAAEN,iBAAvC;AAA0D,UAAA,KAAK,EAAEd,KAAK,CAACE,WAAN,CAAkBwB,cAAnF;AAAkG,UAAA,IAAI,EAAC;AAAvG;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAE5B,CAAC,CAACe,OAAlB;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA7BD;;KAAMX,O;AA+BN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem id={d.id} name={d.name} img={d.img} status={d.status}/>);\n\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} img={props.dialogsPage.dialogs.img} />)\n    let newMessageElement = React.createRef();\n    let sendMessage = () => {\n        let action = {type: 'SEND-MESSAGE'};\n        props.dispatch(action);\n    }\n    let onMessageChange = () => {\n        let text = newMessageElement.current.value;\n        let action = {type: 'UPDATE-NEW-MESSAGE-TEXT', text: text}\n        props.dispatch(action);\n    }\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div className={s.writeMessages}>\n                    <button onClick={sendMessage}>Send</button>\n                    <input onChange={onMessageChange} ref={newMessageElement} value={props.dialogsPage.newMessageText}type='text'></input>\n                </div>\n                <div className={s.message}>{messagesElements}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}