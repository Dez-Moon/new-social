{"ast":null,"code":"import { usersAPI } from \"../../src/api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 15\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 20\n  }],\n  newPostText: '',\n  profile: null\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let text = state.newPostText;\n        return { ...state,\n          newPostText: '',\n          posts: [...state.posts, {\n            id: 3,\n            message: text,\n            likesCount: 0\n          }]\n        };\n      }\n\n    case UPDATE_NEW_POST_MESSAGE:\n      {\n        return { ...state,\n          newPostText: action.text\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostText = text => ({\n  type: UPDATE_NEW_POST_MESSAGE,\n  text\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const openUserProfile = userId => {\n  return dispatch => {\n    usersAPI.getUserProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/redux/profile-reducer.js"],"names":["usersAPI","ADD_POST","UPDATE_NEW_POST_MESSAGE","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","text","addPost","updateNewPostText","setUserProfile","openUserProfile","userId","dispatch","getUserProfile","then","data"],"mappings":"AAAA,SAASA,QAAT,QAAyB,mBAAzB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,kBAAlB;AAAsCC,IAAAA,UAAU,EAAE;AAAlD,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,qBAAlB;AAAyCC,IAAAA,UAAU,EAAE;AAArD,GAFG,CADQ;AAKfC,EAAAA,WAAW,EAAE,EALE;AAMfC,EAAAA,OAAO,EAAE;AANM,CAAnB;;AAQA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AAAe;AACX,YAAIc,IAAI,GAAGH,KAAK,CAACH,WAAjB;AACA,eAAO,EACH,GAAGG,KADA;AAEHH,UAAAA,WAAW,EAAE,EAFV;AAGHJ,UAAAA,KAAK,EAAE,CAAC,GAAGO,KAAK,CAACP,KAAV,EAAiB;AAAEC,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,OAAO,EAAEQ,IAAlB;AAAwBP,YAAAA,UAAU,EAAE;AAApC,WAAjB;AAHJ,SAAP;AAKH;;AACD,SAAKN,uBAAL;AAA8B;AAC1B,eAAO,EACH,GAAGU,KADA;AAEHH,UAAAA,WAAW,EAAEI,MAAM,CAACE;AAFjB,SAAP;AAIH;;AACD,SAAKZ,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGS,KADA;AAEHF,UAAAA,OAAO,EAAEG,MAAM,CAACH;AAFb,SAAP;AAIH;;AAED;AACI,aAAOE,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,OAAO,MAAMI,OAAO,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEb;AAAR,CAAP,CAAhB;AACP,OAAO,MAAMgB,iBAAiB,GAAIF,IAAD,KAAW;AAAED,EAAAA,IAAI,EAAEZ,uBAAR;AAAiCa,EAAAA;AAAjC,CAAX,CAA1B;AACP,OAAO,MAAMG,cAAc,GAAIR,OAAD,KAAc;AAAEI,EAAAA,IAAI,EAAEX,gBAAR;AAA0BO,EAAAA;AAA1B,CAAd,CAAvB;AAEP,OAAO,MAAMS,eAAe,GAAIC,MAAD,IAAY;AACvC,SAAQC,QAAD,IAAc;AACjBrB,IAAAA,QAAQ,CAACsB,cAAT,CAAwBF,MAAxB,EAAgCG,IAAhC,CAAqCC,IAAI,IAAI;AACzCH,MAAAA,QAAQ,CAACH,cAAc,CAACM,IAAD,CAAf,CAAR;AACH,KAFD;AAGH,GAJD;AAKH,CANM;AAQP,eAAeb,cAAf","sourcesContent":["import { usersAPI } from \"../../src/api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_NEW_POST_MESSAGE = 'UPDATE-NEW-POST-MESSAGE';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you?', likesCount: 15 },\n        { id: 2, message: 'It\\'s my first post', likesCount: 20 },\n    ],\n    newPostText: '',\n    profile: null,\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let text = state.newPostText;\n            return {\n                ...state,\n                newPostText: '',\n                posts: [...state.posts, { id: 3, message: text, likesCount: 0 }]\n            }\n        }\n        case UPDATE_NEW_POST_MESSAGE: {\n            return {\n                ...state,\n                newPostText: action.text\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n\n        default:\n            return state;\n    }\n};\n\nexport const addPost = () => ({ type: ADD_POST });\nexport const updateNewPostText = (text) => ({ type: UPDATE_NEW_POST_MESSAGE, text });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\n\nexport const openUserProfile = (userId) => {\n    return (dispatch) => {\n        usersAPI.getUserProfile(userId).then(data => {\n            dispatch(setUserProfile(data));\n        })\n    }\n}\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}