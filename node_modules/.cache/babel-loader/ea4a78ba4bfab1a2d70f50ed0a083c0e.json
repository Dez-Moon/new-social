{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/common/Paginator/Paginator.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport s from './Paginator.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paginator = props => {\n  _s();\n\n  let portionSize = 10;\n  let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i < pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / props.portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n\n  let onNextButtonClick = () => {\n    setPortionNumber(portionNumber + 1);\n  };\n\n  let onPrevButtonClick = () => {\n    setPortionNumber(portionNumber - 1);\n  };\n\n  useEffect(() => {\n    let x = portionNumber * portionSize - 9;\n    props.setCurrentPage(x);\n    props.requestUsers(x, props.pageSize);\n  }, [portionNumber]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.buttonPaginator,\n      disabled: portionNumber === 1,\n      onClick: onPrevButtonClick,\n      children: \"PREV\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: s.item + ' ' + (props.currentPage === p ? s.selectedPage : ''),\n        onClick: e => {\n          props.onPageChanged(p);\n        },\n        children: p\n      }, p, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.buttonPaginator,\n      disabled: portionNumber == portionCount,\n      onClick: onNextButtonClick,\n      children: \"NEXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paginator, \"1YY06K2SN0pPz1mSC1I6LLkdXrE=\");\n\n_c = Paginator;\nexport default Paginator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paginator\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useEffect","useState","s","Paginator","props","portionSize","pagesCount","Math","ceil","totalItemsCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onNextButtonClick","onPrevButtonClick","x","setCurrentPage","requestUsers","buttonPaginator","filter","p","map","item","currentPage","selectedPage","e","onPageChanged"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,CAAP,MAAc,wBAAd;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,eAAN,GAAwBL,KAAK,CAACM,QAAxC,CAAjB;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAApB,EAAgCM,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGF,KAAK,CAACC,WAA7B,CAAnB;AACA,MAAI,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,CAAD,CAAhD;AACA,MAAIgB,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBV,WAAtB,GAAoC,CAAhE;AACA,MAAIa,sBAAsB,GAAGH,aAAa,GAAGV,WAA7C;;AACA,MAAIc,iBAAiB,GAAG,MAAM;AAC1BH,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGA,MAAIK,iBAAiB,GAAG,MAAM;AAC1BJ,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACH,GAFD;;AAGCf,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIqB,CAAC,GAAGN,aAAa,GAAGV,WAAhB,GAA8B,CAAtC;AACDD,IAAAA,KAAK,CAACkB,cAAN,CAAqBD,CAArB;AACAjB,IAAAA,KAAK,CAACmB,YAAN,CAAmBF,CAAnB,EAAsBjB,KAAK,CAACM,QAA5B;AACF,GAJQ,EAIN,CAACK,aAAD,CAJM,CAAT;AAKD,sBACI;AAAA,4BACM;AAAQ,MAAA,SAAS,EAAEb,CAAC,CAACsB,eAArB;AAAsC,MAAA,QAAQ,EAAET,aAAa,KAAK,CAAlE;AAAqE,MAAA,OAAO,EAAEK,iBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAEST,KAAK,CAACc,MAAN,CAAaC,CAAC,IAAIA,CAAC,IAAIT,qBAAL,IAA8BS,CAAC,IAAIR,sBAArD,EACAS,GADA,CACKD,CAAD,IAAO;AACR,0BAAO;AAAc,QAAA,SAAS,EAAExB,CAAC,CAAC0B,IAAF,GAAS,GAAT,IAAgBxB,KAAK,CAACyB,WAAN,KAAsBH,CAAtB,GAA0BxB,CAAC,CAAC4B,YAA5B,GAA2C,EAA3D,CAAzB;AACH,QAAA,OAAO,EAAGC,CAAD,IAAO;AAAE3B,UAAAA,KAAK,CAAC4B,aAAN,CAAoBN,CAApB;AAAyB,SADxC;AAAA,kBAC2CA;AAD3C,SAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJA,CAFT,eAOK;AAAQ,MAAA,SAAS,EAAExB,CAAC,CAACsB,eAArB;AAAsC,MAAA,QAAQ,EAAET,aAAa,IAAID,YAAjE;AAA+E,MAAA,OAAO,EAAEK,iBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAjCD;;GAAMhB,S;;KAAAA,S;AAoCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport s from './Paginator.module.css'\n\nconst Paginator = (props) => {\n    let portionSize = 10;\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i < pagesCount; i++) {\n        pages.push(i);\n    }\n    let portionCount = Math.ceil(pagesCount / props.portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize\n    let onNextButtonClick = () => {\n        setPortionNumber(portionNumber + 1)\n    }\n    let onPrevButtonClick = () => {\n        setPortionNumber(portionNumber - 1)\n    }\n     useEffect(() => {\n         let x = portionNumber * portionSize - 9\n        props.setCurrentPage(x)\n        props.requestUsers(x, props.pageSize)\n     }, [portionNumber])\n    return (\n        <div>\n            { <button className={s.buttonPaginator} disabled={portionNumber === 1} onClick={onPrevButtonClick}>PREV</button>}\n                {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                .map((p) => {\n                    return <span key={p} className={s.item + ' ' + (props.currentPage === p ? s.selectedPage : '')}\n                        onClick={(e) => { props.onPageChanged(p); }}>{p}</span>\n                })}\n            {<button className={s.buttonPaginator} disabled={portionNumber == portionCount} onClick={onNextButtonClick}>NEXT</button> }\n        </div>\n    )\n}\n\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}