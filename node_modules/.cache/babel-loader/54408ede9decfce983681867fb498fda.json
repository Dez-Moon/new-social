{"ast":null,"code":"import { usersAPI } from \"../../src/api/api\";\nconst SET_USERS = 'SET-USERS';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING_IN_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userid) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const followSuccess = userid => ({\n  type: FOLLOW,\n  userid\n});\nexport const unfollowSuccess = userid => ({\n  type: UNFOLLOW,\n  userid\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsFollowingInProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\n  isFetching,\n  userId\n});\nexport const getUsers = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport const follow = userId => {\n  return dispatch => {\n    dispatch(toggleIsFollowingInProgress(true, userId));\n    usersAPI.follow(userId).then(data => {\n      if (data.resultCode == 0) {\n        dispatch(followSuccess(userId));\n      }\n\n      dispatch(toggleIsFollowingInProgress(false, userId));\n    });\n  };\n};\nexport const unfollow = (currentPage, pageSize) => {\n  return dispatch => {\n    dispatch(toggleIsFetching(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/redux/users-reducer.js"],"names":["usersAPI","SET_USERS","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userid","followed","totalCount","userId","filter","setUsers","followSuccess","unfollowSuccess","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowingInProgress","getUsers","dispatch","then","data","items","follow","resultCode","unfollow"],"mappings":"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","sourcesContent":["import { usersAPI } from \"../../src/api/api\";\n\nconst SET_USERS = 'SET-USERS';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING_IN_PROGRESS'\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userid) {\n                        return { ...u, followed: true }\n                    }\n                    return u;\n                })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userid) {\n                        return { ...u, followed: false }\n                    }\n                    return u;\n                })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.totalCount }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const followSuccess = (userid) => ({ type: FOLLOW, userid });\nexport const unfollowSuccess = (userid) => ({ type: UNFOLLOW, userid });\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage });\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleIsFollowingInProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFetching, userId });\n\nexport const getUsers = (currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        });\n    }\n}\nexport const follow = (userId) => {\n    return (dispatch) => {\n        dispatch(toggleIsFollowingInProgress(true, userId));\n        usersAPI.follow(userId).then(data => {\n                if (data.resultCode == 0) {\n                    dispatch(followSuccess(userId));\n                }\n                dispatch(toggleIsFollowingInProgress(false, userId));\n            });\n    }\n}\nexport const unfollow = (currentPage, pageSize) => {\n    return (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        });\n    }\n}\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}