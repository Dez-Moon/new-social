{"ast":null,"code":"import React from\"react\";import s from'./Login.module.css';import{reduxForm,Field}from\"redux-form\";import{Input}from\"../common/FormsControls/FormsControls\";import{required}from\"../../utils/validators/validators\";import{connect}from\"react-redux\";import{login,logout}from\"../../redux/auth-reducer\";import{Navigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(_ref){var handleSubmit=_ref.handleSubmit,error=_ref.error;return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Input,validate:[required],name:'email',placeholder:'Email'})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Input,validate:[required],name:'password',type:'password',placeholder:'Password'})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Field,{component:Input,name:'rememberMe',type:'checkbox'}),\" remember me\"]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:s.formSummaryError,children:[error,\" \"]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Login\"})})]});};var LoginReduxForm=reduxForm({form:'Login'})(LoginForm);var Login=function Login(props){var onSubmit=function onSubmit(formData){props.login(formData.email,formData.password,formData.remebmerMe);};if(props.isAuth){return/*#__PURE__*/_jsx(Navigate,{to:'/profile'});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LOGIN\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:onSubmit})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default connect(mapStateToProps,{login:login,logout:logout})(Login);","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/my-app/src/components/Login/Login.jsx"],"names":["React","s","reduxForm","Field","Input","required","connect","login","logout","Navigate","LoginForm","handleSubmit","error","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","remebmerMe","isAuth","mapStateToProps","state","auth"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,oBAAd,CACA,OAAQC,SAAR,CAAmBC,KAAnB,KAA+B,YAA/B,CACA,OAASC,KAAT,KAAsB,uCAAtB,CACA,OAASC,QAAT,KAAyB,mCAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAAQC,KAAR,CAAeC,MAAf,KAA4B,0BAA5B,CACA,OAASC,QAAT,KAAyB,kBAAzB,C,wFAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA2B,IAAzBC,CAAAA,YAAyB,MAAzBA,YAAyB,CAAXC,KAAW,MAAXA,KAAW,CACzC,mBACI,cAAM,QAAQ,CAAED,YAAhB,wBACQ,kCACI,KAAC,KAAD,EAAO,SAAS,CAAEP,KAAlB,CAAyB,QAAQ,CAAE,CAACC,QAAD,CAAnC,CAA+C,IAAI,CAAE,OAArD,CAA8D,WAAW,CAAE,OAA3E,EADJ,EADR,cAIQ,kCACI,KAAC,KAAD,EAAO,SAAS,CAAED,KAAlB,CAAyB,QAAQ,CAAE,CAACC,QAAD,CAAnC,CAA+C,IAAI,CAAE,UAArD,CAAiE,IAAI,CAAE,UAAvE,CAAmF,WAAW,CAAE,UAAhG,EADJ,EAJR,cAOQ,oCACI,KAAC,KAAD,EAAO,SAAS,CAAED,KAAlB,CAAyB,IAAI,CAAE,YAA/B,CAA6C,IAAI,CAAE,UAAnD,EADJ,kBAPR,CAUSQ,KAAK,eAAI,aAAK,SAAS,CAAEX,CAAC,CAACY,gBAAlB,WAAqCD,KAArC,OAVlB,cAWQ,kCACI,iCADJ,EAXR,GADJ,CAiBH,CAlBD,CAmBA,GAAME,CAAAA,cAAc,CAAGZ,SAAS,CAAC,CAACa,IAAI,CAAE,OAAP,CAAD,CAAT,CAA2BL,SAA3B,CAAvB,CACA,GAAMM,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAc,CAC3BF,KAAK,CAACV,KAAN,CAAYY,QAAQ,CAACC,KAArB,CAA4BD,QAAQ,CAACE,QAArC,CAA+CF,QAAQ,CAACG,UAAxD,EACH,CAFD,CAGA,GAAIL,KAAK,CAACM,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CACD,mBACI,oCACI,6BADJ,cAEI,KAAC,cAAD,EAAgB,QAAQ,CAAEL,QAA1B,EAFJ,GADJ,CAMH,CAbD,CAeA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAC5BF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADS,CAAZ,EAAxB,CAGA,cAAejB,CAAAA,OAAO,CAACkB,eAAD,CAAkB,CAACjB,KAAK,CAALA,KAAD,CAAQC,MAAM,CAANA,MAAR,CAAlB,CAAP,CAA2CQ,KAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport s from './Login.module.css';\nimport {reduxForm, Field} from \"redux-form\"\nimport { Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport {login, logout} from \"../../redux/auth-reducer\"\nimport { Navigate } from \"react-router-dom\";\n\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n                <div>\n                    <Field component={Input} validate={[required]} name={'email'} placeholder={'Email'} />\n                </div>\n                <div>\n                    <Field component={Input} validate={[required]} name={'password'} type={'password'} placeholder={'Password'} />\n                </div>\n                <div>                    \n                    <Field component={Input} name={'rememberMe'} type={'checkbox'} /> remember me\n                </div>\n                {error && <div className={s.formSummaryError}>{error} </div>}\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n    )\n}\nconst LoginReduxForm = reduxForm({form: 'Login'})(LoginForm)\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.remebmerMe)\n    }\n    if (props.isAuth) {\n        return <Navigate to={'/profile'} />\n    }\n    return (\n        <div>\n            <h1>LOGIN</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n        isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {login, logout}) (Login);"]},"metadata":{},"sourceType":"module"}