{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport Users from './Users';\nimport { connect } from \"react-redux\";\nimport { followSuccess, setCurrentPage, unfollowSuccess, toggleIsFollowingInProgress, requestUsers, follow, unfollow } from \"../../redux/users-reducer\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { compose } from \"redux\";\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from \"../../redux/users-selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize\n      } = this.props;\n      this.props.requestUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.requestUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        currentPage: this.props.currentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        onPageChanged: this.onPageChanged,\n        followingInProgress: this.props.followingInProgress,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }, this), this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  followSuccess,\n  unfollowSuccess,\n  setCurrentPage,\n  toggleIsFollowingInProgress,\n  requestUsers,\n  follow,\n  unfollow\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","Users","connect","followSuccess","setCurrentPage","unfollowSuccess","toggleIsFollowingInProgress","requestUsers","follow","unfollow","Preloader","compose","getUsers","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","users","totalUsersCount","followingInProgress","isFetching","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,eAAxC,EAAyDC,2BAAzD,EAAsFC,YAAtF,EAAoGC,MAApG,EAA4GC,QAA5G,QAA2H,2BAA3H;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,kBAA/B,EAAmDC,cAAnD,EAAmEC,aAAnE,EAAkFC,sBAAlF,QAA+G,6BAA/G;;;;AAEA,MAAMC,cAAN,SAA6BlB,KAAK,CAACmB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAgB;AAC5B,YAAM;AAACC,QAAAA;AAAD,UAAa,KAAKC,KAAxB;AACA,WAAKA,KAAL,CAAWhB,YAAX,CAAwBc,UAAxB,EAAoCC,QAApC;AACH,KARwC;AAAA;;AACzCE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACA,SAAKA,KAAL,CAAWhB,YAAX,CAAwBkB,WAAxB,EAAqCH,QAArC;AACH;;AAMDI,EAAAA,MAAM,GAAG;AACL,wBACG;AAAA,8BACA,QAAC,KAAD;AACC,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,KADnB;AAEC,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWE,WAFzB;AAGC,QAAA,eAAe,EAAE,KAAKF,KAAL,CAAWK,eAH7B;AAIC,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAJtB;AAKC,QAAA,aAAa,EAAE,KAAKF,aALrB;AAMC,QAAA,mBAAmB,EAAE,KAAKG,KAAL,CAAWM,mBANjC;AAOC,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWf,MAPpB;AAQC,QAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWd;AARtB;AAAA;AAAA;AAAA;AAAA,cADA,EAUE,KAAKc,KAAL,CAAWO,UAAX,gBAAwB,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAAxB,GAAuC,IAVzC;AAAA,oBADH;AAcH;;AAzBwC;;AA6B7C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACLL,IAAAA,KAAK,EAAEf,QAAQ,CAACoB,KAAD,CADV;AAELV,IAAAA,QAAQ,EAAET,WAAW,CAACmB,KAAD,CAFhB;AAGLJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAH9B;AAILP,IAAAA,WAAW,EAAEV,cAAc,CAACiB,KAAD,CAJtB;AAKLF,IAAAA,UAAU,EAAEd,aAAa,CAACgB,KAAD,CALpB;AAMLH,IAAAA,mBAAmB,EAAEZ,sBAAsB,CAACe,KAAD;AANtC,GAAP;AAQD,CATH;;AAWA,eAAerB,OAAO,CAClBT,OAAO,CAAC6B,eAAD,EAAkB;AAAC5B,EAAAA,aAAD;AAAgBE,EAAAA,eAAhB;AAAiCD,EAAAA,cAAjC;AAAiDE,EAAAA,2BAAjD;AAA8EC,EAAAA,YAA9E;AAA4FC,EAAAA,MAA5F;AAAoGC,EAAAA;AAApG,CAAlB,CADW,CAAP,CAEbS,cAFa,CAAf","sourcesContent":["import React from \"react\";\nimport Users from './Users'\nimport { connect } from \"react-redux\";\nimport { followSuccess, setCurrentPage, unfollowSuccess, toggleIsFollowingInProgress, requestUsers, follow, unfollow} from \"../../redux/users-reducer\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { compose } from \"redux\";\nimport {getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from \"../../redux/users-selectors\"\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.requestUsers(currentPage, pageSize)\n    }\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.requestUsers(pageNumber, pageSize)\n    }\n\n    render() {\n        return (\n           <> \n           <Users \n            users={this.props.users} \n            currentPage={this.props.currentPage} \n            totalUsersCount={this.props.totalUsersCount} \n            pageSize={this.props.pageSize}\n            onPageChanged={this.onPageChanged}\n            followingInProgress={this.props.followingInProgress}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}/>\n            {this.props.isFetching ? <Preloader/> : null}\n            </>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n      users: getUsers(state),\n      pageSize: getPageSize(state),\n      totalUsersCount: getTotalUsersCount(state),\n      currentPage: getCurrentPage(state),\n      isFetching: getIsFetching(state),\n      followingInProgress: getFollowingInProgress(state),\n    }\n  }\n\nexport default compose(\n    connect(mapStateToProps, {followSuccess, unfollowSuccess, setCurrentPage, toggleIsFollowingInProgress, requestUsers, follow, unfollow})\n)(UsersContainer)  "]},"metadata":{},"sourceType":"module"}