{"ast":null,"code":"import { profileAPI } from \"../../src/api/api\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst GET_MY_PROFILE = 'GET-MY-PROFILE';\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: 'Hi, how are you?',\n    likesCount: 15\n  }, {\n    id: 2,\n    message: 'It\\'s my first post',\n    likesCount: 20\n  }],\n  profile: null,\n  status: ''\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        let text = action.NewPostText;\n        return { ...state,\n          posts: [...state.posts, {\n            id: 3,\n            message: text,\n            likesCount: 0\n          }]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = NewPostText => ({\n  type: ADD_POST,\n  NewPostText\n});\nexport const setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getMyProfile = profile => ({\n  type: GET_MY_PROFILE,\n  profile\n});\nexport const openUserProfile = userId => {\n  return dispatch => {\n    profileAPI.getProfile(userId).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(data => {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/redux/profile-reducer.js"],"names":["profileAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","GET_MY_PROFILE","initialState","posts","id","message","likesCount","profile","status","profileReducer","state","action","type","text","NewPostText","addPost","setUserProfile","setStatus","getMyProfile","openUserProfile","userId","dispatch","getProfile","then","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import { profileAPI } from \"../../src/api/api\";\n\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\nconst SET_STATUS = 'SET-STATUS';\nconst GET_MY_PROFILE = 'GET-MY-PROFILE'\n\nlet initialState = {\n    posts: [\n        { id: 1, message: 'Hi, how are you?', likesCount: 15 },\n        { id: 2, message: 'It\\'s my first post', likesCount: 20 },\n    ],\n    profile: null,\n    status: '',\n}\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let text = action.NewPostText;\n            return {\n                ...state,\n                posts: [...state.posts, { id: 3, message: text, likesCount: 0 }]\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const addPost = (NewPostText) => ({ type: ADD_POST, NewPostText });\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\nexport const setStatus = (status) => ({ type: SET_STATUS, status})\nexport const getMyProfile = (profile) => ({ type: GET_MY_PROFILE, profile});\n\nexport const openUserProfile = (userId) => {\n    return (dispatch) => {\n        profileAPI.getProfile(userId).then(data => {\n            dispatch(setUserProfile(data));\n        })\n    }\n}\nexport const getStatus = (userId) => {\n    return (dispatch) => {\n        profileAPI.getStatus(userId).then(data => {\n            dispatch(setStatus(data))\n        })\n    }}\nexport const updateStatus = (status) => {\n    return (dispatch) => {\n        profileAPI.updateStatus(status).then(data => {\n            if (data.resultCode === 0) {\n                dispatch(setStatus(status))\n            }\n        })\n    }}\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}