{"ast":null,"code":"import React from\"react\";import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import s from\"./Dialogs.module.css\";import{Field,reduxForm}from\"redux-form\";import{Textarea}from\"../common/FormsControls/FormsControls\";import{maxLengthCreator,required}from\"../../utils/validators/validators\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength100=maxLengthCreator(100);var AddMessageForm=function AddMessageForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{children:\"Send\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{component:Textarea,validate:[required,maxLength100],name:'newMessageBody',placeholder:'Enter your message'})})]});};var AddMessageFormRedux=reduxForm({form:'dialogAddMessageForm'})(AddMessageForm);var Dialogs=function Dialogs(props){var dialogsElements=props.dialogs.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{id:d.id,name:d.name,img:d.img,status:d.status},d.id);});var messagesElements=props.messages.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m.message,img:props.dialogs.img},m.id);});var addNewMessage=function addNewMessage(values){props.sendMessage(values.newMessageBody);};return/*#__PURE__*/_jsxs(\"div\",{className:s.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:s.dialogsItems,children:dialogsElements}),/*#__PURE__*/_jsxs(\"div\",{className:s.messages,children:[/*#__PURE__*/_jsx(\"div\",{className:s.writeMessages,children:/*#__PURE__*/_jsx(AddMessageFormRedux,{onSubmit:addNewMessage})}),/*#__PURE__*/_jsx(\"div\",{className:s.message,children:messagesElements})]})]});};export default Dialogs;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","Message","s","Field","reduxForm","Textarea","maxLengthCreator","required","maxLength100","AddMessageForm","props","handleSubmit","AddMessageFormRedux","form","Dialogs","dialogsElements","dialogs","map","d","id","name","img","status","messagesElements","messages","m","message","addNewMessage","values","sendMessage","newMessageBody","dialogsItems","writeMessages"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,QAAT,KAAyB,uCAAzB,CACA,OAASC,gBAAT,CAA2BC,QAA3B,KAA2C,mCAA3C,C,wFAEA,GAAMC,CAAAA,YAAY,CAAGF,gBAAgB,CAAC,GAAD,CAArC,CAEA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC9B,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,kCACI,gCADJ,EADJ,cAII,kCACI,KAAC,KAAD,EAAO,SAAS,CAAEN,QAAlB,CAA4B,QAAQ,CAAE,CAACE,QAAD,CAAWC,YAAX,CAAtC,CAAgE,IAAI,CAAE,gBAAtE,CAAwF,WAAW,CAAE,oBAArG,EADJ,EAJJ,GADJ,CAUH,CAXD,CAYA,GAAMI,CAAAA,mBAAmB,CAAGR,SAAS,CAAC,CAAES,IAAI,CAAE,sBAAR,CAAD,CAAT,CAA4CJ,cAA5C,CAA5B,CACA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACJ,KAAD,CAAW,CACvB,GAAIK,CAAAA,eAAe,CAAGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAuB,EAAE,CAAEA,CAAC,CAACC,EAA7B,CAAiC,IAAI,CAAED,CAAC,CAACE,IAAzC,CAA+C,GAAG,CAAEF,CAAC,CAACG,GAAtD,CAA2D,MAAM,CAAEH,CAAC,CAACI,MAArE,EAAiBJ,CAAC,CAACC,EAAnB,CAAJ,EAAnB,CAAtB,CACA,GAAII,CAAAA,gBAAgB,CAAGb,KAAK,CAACc,QAAN,CAAeP,GAAf,CAAmB,SAAAQ,CAAC,qBAAI,KAAC,OAAD,EAAoB,OAAO,CAAEA,CAAC,CAACC,OAA/B,CAAwC,GAAG,CAAEhB,KAAK,CAACM,OAAN,CAAcK,GAA3D,EAAcI,CAAC,CAACN,EAAhB,CAAJ,EAApB,CAAvB,CAEA,GAAIQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAC5BlB,KAAK,CAACmB,WAAN,CAAkBD,MAAM,CAACE,cAAzB,EACH,CAFD,CAIA,mBACI,aAAK,SAAS,CAAE5B,CAAC,CAACc,OAAlB,wBACI,YAAK,SAAS,CAAEd,CAAC,CAAC6B,YAAlB,UACKhB,eADL,EADJ,cAII,aAAK,SAAS,CAAEb,CAAC,CAACsB,QAAlB,wBACI,YAAK,SAAS,CAAEtB,CAAC,CAAC8B,aAAlB,uBACI,KAAC,mBAAD,EAAqB,QAAQ,CAAEL,aAA/B,EADJ,EADJ,cAII,YAAK,SAAS,CAAEzB,CAAC,CAACwB,OAAlB,UAA4BH,gBAA5B,EAJJ,GAJJ,GADJ,CAaH,CArBD,CAuBA,cAAeT,CAAAA,OAAf","sourcesContent":["import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\"\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <button>Send</button>\n            </div>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength100]} name={'newMessageBody'} placeholder={'Enter your message'}/>\n            </div>\n        </form>\n    )\n}\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\nconst Dialogs = (props) => {\n    let dialogsElements = props.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} img={d.img} status={d.status} />);\n    let messagesElements = props.messages.map(m => <Message key={m.id} message={m.message} img={props.dialogs.img} />)\n    \n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div className={s.writeMessages}>\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\n                </div>\n                <div className={s.message}>{messagesElements}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}