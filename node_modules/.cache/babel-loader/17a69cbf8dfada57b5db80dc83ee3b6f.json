{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { openUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport Profile from \"./Profile\";\nimport { compose } from \"redux\";\nimport { profileWithAuthNavigate, withRouter } from \"../../hoc/withAuthNavigate\";\nimport { profileAPI } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    profileAPI.updatePhoto('/Users/konstantin/Downloads/photo.png');\n    let userId = this.props.router.params['*'];\n\n    if (!userId) {\n      userId = this.props.authorizationUserId;\n    }\n\n    this.props.openUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.router.params['*'] !== this.props.router.params['*']) {\n      let userId = this.props.router.params['*'];\n\n      if (!userId) {\n        userId = this.props.authorizationUserId;\n      }\n\n      this.props.openUserProfile(userId);\n      this.props.getStatus(userId);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateStatus: this.props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizationUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  openUserProfile,\n  getStatus,\n  updateStatus\n}), withRouter, profileWithAuthNavigate)(ProfileContainer);","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","connect","openUserProfile","getStatus","updateStatus","Profile","compose","profileWithAuthNavigate","withRouter","profileAPI","ProfileContainer","Component","componentDidMount","updatePhoto","userId","props","router","params","authorizationUserId","componentDidUpdate","prevProps","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,YAArC,QAAyD,6BAAzD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,uBAAT,EAAkCC,UAAlC,QAAoD,4BAApD;AACA,SAASC,UAAT,QAA2B,eAA3B;;;AAGA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAC7CC,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,UAAU,CAACI,WAAX,CAAuB,uCAAvB;AACA,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,GAAzB,CAAb;;AACA,QAAI,CAACH,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,mBAApB;AACH;;AACC,SAAKH,KAAL,CAAWb,eAAX,CAA2BY,MAA3B;AACA,SAAKC,KAAL,CAAWZ,SAAX,CAAqBW,MAArB;AAED;;AACDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACJ,MAAV,CAAiBC,MAAjB,CAAwB,GAAxB,MAAiC,KAAKF,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,GAAzB,CAArC,EAAoE;AAClE,UAAIH,MAAM,GAAG,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,MAAlB,CAAyB,GAAzB,CAAb;;AACA,UAAI,CAACH,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,mBAApB;AACH;;AACC,WAAKH,KAAL,CAAWb,eAAX,CAA2BY,MAA3B;AACA,WAAKC,KAAL,CAAWZ,SAAX,CAAqBW,MAArB;AACD;AACF;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACA,QAAC,OAAD,OAAa,KAAKN,KAAlB;AACA,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWO,OADpB;AAEA,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAFnB;AAGA,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWX;AAHzB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AA/B4C;;AAkC/C,IAAIoB,eAAe,GAAIC,KAAD,KAAY;AAChCH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADK;AAEhCC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFM;AAGhCL,EAAAA,mBAAmB,EAAEO,KAAK,CAACE,IAAN,CAAWb,MAHA;AAIhCc,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJa,CAAZ,CAAtB;;AAQA,eAAetB,OAAO,CACpBL,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,eAAD;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAAlB,CADa,EAEpBI,UAFoB,EAGpBD,uBAHoB,CAAP,CAIbG,gBAJa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { openUserProfile, getStatus, updateStatus } from \"../../redux/profile-reducer\";\nimport Profile from \"./Profile\";\nimport { compose } from \"redux\";\nimport { profileWithAuthNavigate, withRouter } from \"../../hoc/withAuthNavigate\";\nimport { profileAPI } from \"../../api/api\";\n\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    profileAPI.updatePhoto('/Users/konstantin/Downloads/photo.png')\n    let userId = this.props.router.params['*'];\n    if (!userId) {\n      userId = this.props.authorizationUserId;\n  }\n    this.props.openUserProfile(userId);\n    this.props.getStatus(userId);\n    \n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.router.params['*'] !== this.props.router.params['*']) {\n      let userId = this.props.router.params['*'];\n      if (!userId) {\n        userId = this.props.authorizationUserId;\n    }\n      this.props.openUserProfile(userId);\n      this.props.getStatus(userId);    \n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <Profile {...this.props} \n      profile={this.props.profile} \n      status={this.props.status} \n      updateStatus={this.props.updateStatus}/>\n    </div>\n  )  \n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizationUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\n\nexport default compose(\n  connect(mapStateToProps, {openUserProfile, getStatus, updateStatus}),\n  withRouter,\n  profileWithAuthNavigate,\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}