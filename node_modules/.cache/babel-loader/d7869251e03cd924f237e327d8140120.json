{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n  headers: {\n    \"API-KEY\": \"02e4f623-0659-4076-b2cd-710855c46c0c\"\n  }\n});\nexport const usersAPI = {\n  getUsers() {\n    let currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n\n  follow(userId) {\n    return instance.post(`follow/${userId}`).then(response => response.data);\n  },\n\n  unfollow(userId) {\n    return instance.delete(`follow/${userId}`).then(response => response.data);\n  }\n\n};\nexport const profileAPI = {\n  getProfile(userId) {\n    return instance.get(`profile/` + userId).then(response => response.data);\n  },\n\n  getStatus(userId) {\n    return instance.get(`/profile/status/` + userId).then(response => response.data);\n  },\n\n  updateStatus(status) {\n    return instance.put(`/profile/status`, {\n      status: status\n    }).then(response => response.data);\n  }\n\n};\nexport const authAPI = {\n  me() {\n    return instance.get(`auth/me`).then(response => response.data);\n  }\n\n};","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","me"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AAAE,eAAW;AAAb;AAHiB,CAAb,CAAjB;AAMA,OAAO,MAAMC,QAAQ,GAAG;AACpBC,EAAAA,QAAQ,GAAiC;AAAA,QAAhCC,WAAgC,uEAAlB,CAAkB;AAAA,QAAfC,QAAe,uEAAJ,EAAI;AACrC,WAAOR,QAAQ,CAACS,GAAT,CAAc,cAAaF,WAAY,UAASC,QAAS,EAAzD,EACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAJmB;;AAKpBC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,WAAOd,QAAQ,CAACe,IAAT,CAAe,UAASD,MAAO,EAA/B,EACFJ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GARmB;;AASpBI,EAAAA,QAAQ,CAACF,MAAD,EAAS;AACb,WAAOd,QAAQ,CAACiB,MAAT,CAAiB,UAASH,MAAO,EAAjC,EACFJ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AAZmB,CAAjB;AAeP,OAAO,MAAMM,UAAU,GAAG;AACtBC,EAAAA,UAAU,CAACL,MAAD,EAAS;AACf,WAAOd,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaK,MAA1B,EACFJ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAJqB;;AAKtBQ,EAAAA,SAAS,CAACN,MAAD,EAAS;AACd,WAAOd,QAAQ,CAACS,GAAT,CAAc,kBAAD,GAAqBK,MAAlC,EACFJ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GARqB;;AAStBS,EAAAA,YAAY,CAACC,MAAD,EAAS;AACjB,WAAOtB,QAAQ,CAACuB,GAAT,CAAc,iBAAd,EAAgC;AAACD,MAAAA,MAAM,EAAEA;AAAT,KAAhC,EACFZ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AAZqB,CAAnB;AAcP,OAAO,MAAMY,OAAO,GAAG;AACnBC,EAAAA,EAAE,GAAG;AACD,WAAOzB,QAAQ,CAACS,GAAT,CAAc,SAAd,EACFC,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH;;AAJkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: { \"API-KEY\": \"02e4f623-0659-4076-b2cd-710855c46c0c\" }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n            .then(response => response.data)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n            .then(response => response.data)\n    },\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId)\n            .then(response => response.data)\n    },\n    getStatus(userId) {\n        return instance.get(`/profile/status/` + userId)\n            .then(response => response.data)\n    },\n    updateStatus(status) {\n        return instance.put(`/profile/status`, {status: status})\n            .then(response => response.data)\n    }\n}\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n            .then(response => response.data)\n    }\n}"]},"metadata":{},"sourceType":"module"}