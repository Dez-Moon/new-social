{"ast":null,"code":"import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendMessage, updateNewMessageText } from '../../redux/dialogs-reducer';\nimport Dialogs from \"./Dialogs\";\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\nimport { compose } from \"redux\";\nlet AuthNavigateComponent = withAuthNavigate(Dialogs);\n_c = AuthNavigateComponent;\n\nlet mapStateToProps = state => {\n  return {\n    dialogs: state.dialogsPage.dialogs,\n    messages: state.dialogsPage.messages,\n    newMessageText: state.dialogsPage.newMessageText\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  updateNewMessageText,\n  sendMessage\n}), withAuthNavigate)(Dialogs);\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthNavigateComponent\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","connect","sendMessage","updateNewMessageText","Dialogs","withAuthNavigate","compose","AuthNavigateComponent","mapStateToProps","state","dialogs","dialogsPage","messages","newMessageText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,oBAAtB,QAAkD,6BAAlD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,IAAIC,qBAAqB,GAAGF,gBAAgB,CAACD,OAAD,CAA5C;KAAIG,qB;;AAEJ,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD,OADxB;AAEHE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,WAAN,CAAkBC,QAFzB;AAGHC,IAAAA,cAAc,EAAEJ,KAAK,CAACE,WAAN,CAAkBE;AAH/B,GAAP;AAKH,CAND;;AASA,eAAeP,OAAO,CAClBL,OAAO,CAACO,eAAD,EAAkB;AAACL,EAAAA,oBAAD;AAAuBD,EAAAA;AAAvB,CAAlB,CADW,EAElBG,gBAFkB,CAAP,CAGbD,OAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendMessage, updateNewMessageText } from '../../redux/dialogs-reducer'\nimport Dialogs from \"./Dialogs\";\nimport {withAuthNavigate} from \"../../hoc/withAuthNavigate\"\nimport { compose } from \"redux\";\n\nlet AuthNavigateComponent = withAuthNavigate(Dialogs)\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {updateNewMessageText, sendMessage}),\n    withAuthNavigate\n)(Dialogs)"]},"metadata":{},"sourceType":"module"}