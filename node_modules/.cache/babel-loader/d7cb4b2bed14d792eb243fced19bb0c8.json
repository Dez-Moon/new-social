{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Dialogs/DialogsContainer.jsx\";\nimport React from \"react\";\nimport { sendMessageActionCreator, updateNewMessageTextActionCreator } from '../../redux/dialogs-reducer';\nimport Dialogs from \"./Dialogs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DialogsContainer = props => {\n  let sendMessage = () => {\n    let action = sendMessageActionCreator();\n    props.dispatch(action);\n  };\n\n  let onMessageChange = text => {\n    let action = updateNewMessageTextActionCreator(text);\n    props.dispatch(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialogs, {\n    sendMessage: sendMessage,\n    updateNewMessageText: onMessageChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 14\n  }, this);\n};\n\n_c = DialogsContainer;\nexport default DialogsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DialogsContainer\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Dialogs/DialogsContainer.jsx"],"names":["React","sendMessageActionCreator","updateNewMessageTextActionCreator","Dialogs","DialogsContainer","props","sendMessage","action","dispatch","onMessageChange","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,wBAAR,EAAkCC,iCAAlC,QAA0E,6BAA1E;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAChC,MAAIC,WAAW,GAAG,MAAM;AACpB,QAAIC,MAAM,GAAGN,wBAAwB,EAArC;AACAI,IAAAA,KAAK,CAACG,QAAN,CAAeD,MAAf;AACH,GAHD;;AAIA,MAAIE,eAAe,GAAIC,IAAD,IAAU;AAC5B,QAAIH,MAAM,GAAGL,iCAAiC,CAACQ,IAAD,CAA9C;AACAL,IAAAA,KAAK,CAACG,QAAN,CAAeD,MAAf;AACH,GAHD;;AAIA,sBAAS,QAAC,OAAD;AAAS,IAAA,WAAW,EAAID,WAAxB;AAAqC,IAAA,oBAAoB,EAAIG;AAA7D;AAAA;AAAA;AAAA;AAAA,UAAT;AACH,CAVD;;KAAML,gB;AAYN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport {sendMessageActionCreator, updateNewMessageTextActionCreator} from '../../redux/dialogs-reducer'\nimport Dialogs from \"./Dialogs\";\n\nconst DialogsContainer = (props) => {\n    let sendMessage = () => {\n        let action = sendMessageActionCreator();\n        props.dispatch(action);\n    }\n    let onMessageChange = (text) => {\n        let action = updateNewMessageTextActionCreator(text);\n        props.dispatch(action);\n    }\n    return ( <Dialogs sendMessage = {sendMessage} updateNewMessageText = {onMessageChange}/>)\n}\n\nexport default DialogsContainer;"]},"metadata":{},"sourceType":"module"}