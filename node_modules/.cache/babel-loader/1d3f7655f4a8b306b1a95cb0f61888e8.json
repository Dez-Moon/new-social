{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport Users from './Users';\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setUsers, unfollow, setTotalUsersCount, toggleIsFetching, toggleIsFollowingIsProcess } from \"../../redux/users-reducer\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { usersAPI } from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setUsers([]);\n      this.props.toggleIsFetching(true);\n      usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        currentPage: this.props.currentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        onPageChanged: this.onPageChanged,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this), this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 38\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n  toggleIsFollowingIsProcess\n})(UsersContainer);","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","Users","connect","follow","setCurrentPage","setUsers","unfollow","setTotalUsersCount","toggleIsFetching","toggleIsFollowingIsProcess","Preloader","usersAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","componentDidMount","currentPage","totalCount","render","users","totalUsersCount","isFetching","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Users from './Users'\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setUsers, unfollow, setTotalUsersCount, toggleIsFetching, toggleIsFollowingIsProcess } from \"../../redux/users-reducer\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport {usersAPI} from \"../../api/api\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {    \n        this.props.toggleIsFetching(false);    \n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n         })\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setUsers([]);\n        this.props.toggleIsFetching(true);\n        usersAPI.getUsers(pageNumber, this.props.pageSize).then(data => {    \n            this.props.toggleIsFetching(false);    \n            this.props.setUsers(data.items);\n         })\n    }\n\n    render() {\n        return (\n           <> \n           <Users \n            users={this.props.users} \n            currentPage={this.props.currentPage} \n            totalUsersCount={this.props.totalUsersCount} \n            pageSize={this.props.pageSize}\n            onPageChanged={this.onPageChanged}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}/>\n            {this.props.isFetching ? <Preloader/> : null}\n            </>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n      users: state.usersPage.users,\n      pageSize: state.usersPage.pageSize,\n      totalUsersCount: state.usersPage.totalUsersCount,\n      currentPage: state.usersPage.currentPage,\n      isFetching: state.usersPage.isFetching,\n    }\n  }\n\nexport default connect(mapStateToProps, { follow, unfollow, setUsers, setCurrentPage, \n    setTotalUsersCount, toggleIsFetching, toggleIsFollowingIsProcess}) (UsersContainer);"]},"metadata":{},"sourceType":"module"}