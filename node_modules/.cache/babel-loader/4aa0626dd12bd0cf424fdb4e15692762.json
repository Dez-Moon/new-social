{"ast":null,"code":"import { authAPI } from \"../../src/api/api\";\nconst SET_USER_DATA = 'SET-USER-DATA';\nlet initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (userId, email, login) => ({\n  type: SET_USER_DATA,\n  data: {\n    userId,\n    email,\n    login\n  }\n});\nexport const getAuthUserData = () => {\n  return dispatch => {\n    authAPI.me().then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          email,\n          login\n        } = data.data;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","me","then","resultCode","id"],"mappings":"AAAA,SAASA,OAAT,QAAwB,mBAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAYA,OAAO,MAAMI,eAAe,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,MAA2B;AAAEK,EAAAA,IAAI,EAAET,aAAR;AAAuBU,EAAAA,IAAI,EAAE;AAAER,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB;AAA7B,CAA3B,CAAxB;AAEP,OAAO,MAAMQ,eAAe,GAAG,MAAM;AACjC,SAAQC,QAAD,IAAc;AACjBd,IAAAA,OAAO,CAACe,EAAR,GAAaC,IAAb,CAAkBL,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACM,UAAL,KAAoB,CAAxB,EAA2B;AACvB,YAAI;AAAEC,UAAAA,EAAF;AAAMd,UAAAA,KAAN;AAAaC,UAAAA;AAAb,YAAuBM,IAAI,CAACA,IAAhC;AACAG,QAAAA,QAAQ,CAACF,eAAe,CAACM,EAAD,EAAKd,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KALD;AAMH,GAPD;AAQH,CATM;AAUP,eAAeE,WAAf","sourcesContent":["import { authAPI } from \"../../src/api/api\";\n\nconst SET_USER_DATA = 'SET-USER-DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        default:\n            return state;\n    }\n}\nexport const setAuthUserData = (userId, email, login) => ({ type: SET_USER_DATA, data: { userId, email, login } });\n\nexport const getAuthUserData = () => {\n    return (dispatch) => {\n        authAPI.me().then(data => {\n            if (data.resultCode === 0) {\n                let { id, email, login } = data.data;\n                dispatch(setAuthUserData(id, email, login));\n            }\n        })\n    }\n}\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}