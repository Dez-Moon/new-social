{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/my-app/src/components/Dialogs/Dialogs.jsx\";\nimport React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst maxLength100 = maxLengthCreator(100);\n\nconst AddMessageForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Field, {\n        component: Textarea,\n        validate: [required, maxLength100],\n        name: 'newMessageBody',\n        placeholder: 'Enter your message'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AddMessageForm;\nconst AddMessageFormRedux = reduxForm({\n  form: 'dialogAddMessageForm'\n})(AddMessageForm);\n_c2 = AddMessageFormRedux;\n\nconst Dialogs = props => {\n  let dialogsElements = props.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    id: d.id,\n    name: d.name,\n    img: d.img,\n    status: d.status\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 50\n  }, this));\n  let messagesElements = props.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message,\n    img: props.dialogs.img\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 52\n  }, this));\n\n  let addNewMessage = values => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.writeMessages,\n        children: /*#__PURE__*/_jsxDEV(AddMessageFormRedux, {\n          onSubmit: addNewMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.message,\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Dialogs;\nexport default Dialogs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AddMessageForm\");\n$RefreshReg$(_c2, \"AddMessageFormRedux\");\n$RefreshReg$(_c3, \"Dialogs\");","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/my-app/src/components/Dialogs/Dialogs.jsx"],"names":["React","DialogItem","Message","s","Field","reduxForm","Textarea","maxLengthCreator","required","maxLength100","AddMessageForm","props","handleSubmit","AddMessageFormRedux","form","Dialogs","dialogsElements","dialogs","map","d","id","name","img","status","messagesElements","messages","m","message","addNewMessage","values","sendMessage","newMessageBody","dialogsItems","writeMessages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,uCAAzB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,mCAA3C;;AAEA,MAAMC,YAAY,GAAGF,gBAAgB,CAAC,GAAD,CAArC;;AAEA,MAAMG,cAAc,GAAIC,KAAD,IAAW;AAC9B,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACC,YAAtB;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEN,QAAlB;AAA4B,QAAA,QAAQ,EAAE,CAACE,QAAD,EAAWC,YAAX,CAAtC;AAAgE,QAAA,IAAI,EAAE,gBAAtE;AAAwF,QAAA,WAAW,EAAE;AAArG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAXD;;KAAMC,c;AAYN,MAAMG,mBAAmB,GAAGR,SAAS,CAAC;AAAES,EAAAA,IAAI,EAAE;AAAR,CAAD,CAAT,CAA4CJ,cAA5C,CAA5B;MAAMG,mB;;AACN,MAAME,OAAO,GAAIJ,KAAD,IAAW;AACvB,MAAIK,eAAe,GAAGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBC,CAAC,iBAAI,QAAC,UAAD;AAAuB,IAAA,EAAE,EAAEA,CAAC,CAACC,EAA7B;AAAiC,IAAA,IAAI,EAAED,CAAC,CAACE,IAAzC;AAA+C,IAAA,GAAG,EAAEF,CAAC,CAACG,GAAtD;AAA2D,IAAA,MAAM,EAAEH,CAAC,CAACI;AAArE,KAAiBJ,CAAC,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,UAAvB,CAAtB;AACA,MAAII,gBAAgB,GAAGb,KAAK,CAACc,QAAN,CAAeP,GAAf,CAAmBQ,CAAC,iBAAI,QAAC,OAAD;AAAoB,IAAA,OAAO,EAAEA,CAAC,CAACC,OAA/B;AAAwC,IAAA,GAAG,EAAEhB,KAAK,CAACM,OAAN,CAAcK;AAA3D,KAAcI,CAAC,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA,UAAxB,CAAvB;;AAEA,MAAIQ,aAAa,GAAIC,MAAD,IAAY;AAC5BlB,IAAAA,KAAK,CAACmB,WAAN,CAAkBD,MAAM,CAACE,cAAzB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE5B,CAAC,CAACc,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEd,CAAC,CAAC6B,YAAlB;AAAA,gBACKhB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEb,CAAC,CAACsB,QAAlB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAEtB,CAAC,CAAC8B,aAAlB;AAAA,+BACI,QAAC,mBAAD;AAAqB,UAAA,QAAQ,EAAEL;AAA/B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAEzB,CAAC,CAACwB,OAAlB;AAAA,kBAA4BH;AAA5B;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CArBD;;MAAMT,O;AAuBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Field, reduxForm } from \"redux-form\"\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst maxLength100 = maxLengthCreator(100)\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <button>Send</button>\n            </div>\n            <div>\n                <Field component={Textarea} validate={[required, maxLength100]} name={'newMessageBody'} placeholder={'Enter your message'}/>\n            </div>\n        </form>\n    )\n}\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(AddMessageForm);\nconst Dialogs = (props) => {\n    let dialogsElements = props.dialogs.map(d => <DialogItem key={d.id} id={d.id} name={d.name} img={d.img} status={d.status} />);\n    let messagesElements = props.messages.map(m => <Message key={m.id} message={m.message} img={props.dialogs.img} />)\n    \n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody)\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div className={s.writeMessages}>\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\n                </div>\n                <div className={s.message}>{messagesElements}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}