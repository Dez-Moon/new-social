{"ast":null,"code":"import { usersAPI } from \"../../src/api/api\";\nimport { updateObjectArray } from \"../utils/validators/object-helpers\";\nconst SET_USERS = 'SET-USERS';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING_IN_PROGRESS';\nconst SET_CURRENT_USERS_LIST = 'SER-CURRENT-USERS-LIST';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  pagesUsersList: 10,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: updateObjectArray(state.users, action.userid, 'id', {\n          followed: true\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: updateObjectArray(state.users, action.userid, 'id', {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.page\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.totalCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_IN_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n\n    case SET_CURRENT_USERS_LIST:\n      {\n        return { ...state,\n          pagesUsersList: state.pagesUsersList + action.point,\n          currentPage: currentPage + action.point\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const followSuccess = userid => ({\n  type: FOLLOW,\n  userid\n});\nexport const unfollowSuccess = userid => ({\n  type: UNFOLLOW,\n  userid\n});\nexport const setCurrentPage = page => ({\n  type: SET_CURRENT_PAGE,\n  page\n});\nexport const setTotalUsersCount = totalCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  totalCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleIsFollowingInProgress = (isFetching, userId) => ({\n  type: TOGGLE_IS_FOLLOWING_IN_PROGRESS,\n  isFetching,\n  userId\n});\nexport const setCurrentUsersList = point = {\n  type: SET_CURRENT_USERS_LIST,\n  point\n};\nexport const requestUsers = (page, pageSize) => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  dispatch(setCurrentPage(page));\n  let data = await usersAPI.getUsers(page, pageSize);\n  dispatch(toggleIsFetching(false));\n  dispatch(setUsers(data.items));\n  dispatch(setTotalUsersCount(data.totalCount));\n};\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n  dispatch(toggleIsFollowingInProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleIsFollowingInProgress(false, userId));\n};\n\nexport const follow = userId => async dispatch => {\n  followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n};\nexport const unfollow = userId => async dispatch => {\n  followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n};\nexport default usersReducer;","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/redux/users-reducer.js"],"names":["usersAPI","updateObjectArray","SET_USERS","FOLLOW","UNFOLLOW","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_IN_PROGRESS","SET_CURRENT_USERS_LIST","initialState","users","pageSize","totalUsersCount","currentPage","pagesUsersList","isFetching","followingInProgress","usersReducer","state","action","type","userid","followed","page","totalCount","userId","filter","id","point","setUsers","followSuccess","unfollowSuccess","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowingInProgress","setCurrentUsersList","requestUsers","dispatch","data","getUsers","items","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","bind","unfollow"],"mappings":"AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AAEA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,+BAA+B,GAAG,iCAAxC;AACA,MAAMC,sBAAsB,GAAG,wBAA/B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,EAFK;AAGfC,EAAAA,eAAe,EAAE,CAHF;AAIfC,EAAAA,WAAW,EAAE,CAJE;AAKfC,EAAAA,cAAc,EAAE,EALD;AAMfC,EAAAA,UAAU,EAAE,KANG;AAOfC,EAAAA,mBAAmB,EAAE;AAPN,CAAnB;;AAUA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKlB,MAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHR,QAAAA,KAAK,EAAEV,iBAAiB,CAACkB,KAAK,CAACR,KAAP,EAAcS,MAAM,CAACE,MAArB,EAA6B,IAA7B,EAAmC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAnC;AAFrB,OAAP;;AAIJ,SAAKnB,QAAL;AACI,aAAO,EACH,GAAGe,KADA;AAEHR,QAAAA,KAAK,EAAEV,iBAAiB,CAACkB,KAAK,CAACR,KAAP,EAAcS,MAAM,CAACE,MAArB,EAA6B,IAA7B,EAAmC;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAnC;AAFrB,OAAP;;AAKJ,SAAKrB,SAAL;AAAgB;AACZ,eAAO,EAAE,GAAGiB,KAAL;AAAYR,UAAAA,KAAK,EAAES,MAAM,CAACT;AAA1B,SAAP;AACH;;AACD,SAAKN,gBAAL;AAAuB;AACnB,eAAO,EAAE,GAAGc,KAAL;AAAYL,UAAAA,WAAW,EAAEM,MAAM,CAACI;AAAhC,SAAP;AACH;;AACD,SAAKlB,qBAAL;AAA4B;AACxB,eAAO,EAAE,GAAGa,KAAL;AAAYN,UAAAA,eAAe,EAAEO,MAAM,CAACK;AAApC,SAAP;AACH;;AACD,SAAKlB,kBAAL;AAAyB;AACrB,eAAO,EAAE,GAAGY,KAAL;AAAYH,UAAAA,UAAU,EAAEI,MAAM,CAACJ;AAA/B,SAAP;AACH;;AACD,SAAKR,+BAAL;AAAsC;AAClC,eAAO,EACH,GAAGW,KADA;AACOF,UAAAA,mBAAmB,EAAEG,MAAM,CAACJ,UAAP,GACzB,CAAC,GAAGG,KAAK,CAACF,mBAAV,EAA+BG,MAAM,CAACM,MAAtC,CADyB,GAEzBP,KAAK,CAACF,mBAAN,CAA0BU,MAA1B,CAAiCC,EAAE,IAAIA,EAAE,IAAIR,MAAM,CAACM,MAApD;AAHH,SAAP;AAKH;;AACD,SAAKjB,sBAAL;AAA6B;AACzB,eAAO,EACH,GAAGU,KADA;AACOJ,UAAAA,cAAc,EAAGI,KAAK,CAACJ,cAAN,GAAuBK,MAAM,CAACS,KADtD;AAC8Df,UAAAA,WAAW,EAAGA,WAAW,GAAGM,MAAM,CAACS;AADjG,SAAP;AAGH;;AACD;AACI,aAAOV,KAAP;AArCR;AAuCH,CAxCD;;AAyCA,OAAO,MAAMW,QAAQ,GAAInB,KAAD,KAAY;AAAEU,EAAAA,IAAI,EAAEnB,SAAR;AAAmBS,EAAAA;AAAnB,CAAZ,CAAjB;AACP,OAAO,MAAMoB,aAAa,GAAIT,MAAD,KAAa;AAAED,EAAAA,IAAI,EAAElB,MAAR;AAAgBmB,EAAAA;AAAhB,CAAb,CAAtB;AACP,OAAO,MAAMU,eAAe,GAAIV,MAAD,KAAa;AAAED,EAAAA,IAAI,EAAEjB,QAAR;AAAkBkB,EAAAA;AAAlB,CAAb,CAAxB;AACP,OAAO,MAAMW,cAAc,GAAIT,IAAD,KAAW;AAAEH,EAAAA,IAAI,EAAEhB,gBAAR;AAA0BmB,EAAAA;AAA1B,CAAX,CAAvB;AACP,OAAO,MAAMU,kBAAkB,GAAIT,UAAD,KAAiB;AAAEJ,EAAAA,IAAI,EAAEf,qBAAR;AAA+BmB,EAAAA;AAA/B,CAAjB,CAA3B;AACP,OAAO,MAAMU,gBAAgB,GAAInB,UAAD,KAAiB;AAAEK,EAAAA,IAAI,EAAEd,kBAAR;AAA4BS,EAAAA;AAA5B,CAAjB,CAAzB;AACP,OAAO,MAAMoB,2BAA2B,GAAG,CAACpB,UAAD,EAAaU,MAAb,MAAyB;AAAEL,EAAAA,IAAI,EAAEb,+BAAR;AAAyCQ,EAAAA,UAAzC;AAAqDU,EAAAA;AAArD,CAAzB,CAApC;AACP,OAAO,MAAMW,mBAAmB,GAAIR,KAAD,GAAW;AAAER,EAAAA,IAAI,EAAEZ,sBAAR;AAAgCoB,EAAAA;AAAhC,CAAvC;AAEP,OAAO,MAAMS,YAAY,GAAG,CAACd,IAAD,EAAOZ,QAAP,KAAoB,MAAO2B,QAAP,IAAoB;AAChEA,EAAAA,QAAQ,CAACJ,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAI,EAAAA,QAAQ,CAACN,cAAc,CAACT,IAAD,CAAf,CAAR;AACA,MAAIgB,IAAI,GAAG,MAAMxC,QAAQ,CAACyC,QAAT,CAAkBjB,IAAlB,EAAwBZ,QAAxB,CAAjB;AACA2B,EAAAA,QAAQ,CAACJ,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACAI,EAAAA,QAAQ,CAACT,QAAQ,CAACU,IAAI,CAACE,KAAN,CAAT,CAAR;AACAH,EAAAA,QAAQ,CAACL,kBAAkB,CAACM,IAAI,CAACf,UAAN,CAAnB,CAAR;AACH,CAPM;;AAQP,MAAMkB,kBAAkB,GAAG,OAAOJ,QAAP,EAAiBb,MAAjB,EAAyBkB,SAAzB,EAAoCC,aAApC,KAAsD;AAC7EN,EAAAA,QAAQ,CAACH,2BAA2B,CAAC,IAAD,EAAOV,MAAP,CAA5B,CAAR;AACA,MAAIc,IAAI,GAAG,MAAMI,SAAS,CAAClB,MAAD,CAA1B;;AACA,MAAIc,IAAI,CAACM,UAAL,IAAmB,CAAvB,EAA0B;AACtBP,IAAAA,QAAQ,CAACM,aAAa,CAACnB,MAAD,CAAd,CAAR;AACH;;AACDa,EAAAA,QAAQ,CAACH,2BAA2B,CAAC,KAAD,EAAQV,MAAR,CAA5B,CAAR;AACH,CAPD;;AAQA,OAAO,MAAMqB,MAAM,GAAIrB,MAAD,IAAY,MAAOa,QAAP,IAAoB;AAClDI,EAAAA,kBAAkB,CAACJ,QAAD,EAAWb,MAAX,EAAmB1B,QAAQ,CAAC+C,MAAT,CAAgBC,IAAhB,CAAqBhD,QAArB,CAAnB,EAAmD+B,aAAnD,CAAlB;AACH,CAFM;AAGP,OAAO,MAAMkB,QAAQ,GAAIvB,MAAD,IAAY,MAAOa,QAAP,IAAoB;AACpDI,EAAAA,kBAAkB,CAACJ,QAAD,EAAWb,MAAX,EAAmB1B,QAAQ,CAACiD,QAAT,CAAkBD,IAAlB,CAAuBhD,QAAvB,CAAnB,EAAqDgC,eAArD,CAAlB;AACH,CAFM;AAKP,eAAed,YAAf","sourcesContent":["import { usersAPI } from \"../../src/api/api\";\nimport { updateObjectArray } from \"../utils/validators/object-helpers\";\n\nconst SET_USERS = 'SET-USERS';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\nconst TOGGLE_IS_FOLLOWING_IN_PROGRESS = 'TOGGLE-IS-FOLLOWING_IN_PROGRESS'\nconst SET_CURRENT_USERS_LIST = 'SER-CURRENT-USERS-LIST'\n\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    pagesUsersList: 10,\n    isFetching: false,\n    followingInProgress: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectArray(state.users, action.userid, 'id', { followed: true })\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectArray(state.users, action.userid, 'id', { followed: false })\n\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CURRENT_PAGE: {\n            return { ...state, currentPage: action.page }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.totalCount }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case TOGGLE_IS_FOLLOWING_IN_PROGRESS: {\n            return {\n                ...state, followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        case SET_CURRENT_USERS_LIST: {\n            return {\n                ...state, pagesUsersList: (state.pagesUsersList + action.point), currentPage: (currentPage + action.point)\n            }\n        }\n        default:\n            return state;\n    }\n}\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const followSuccess = (userid) => ({ type: FOLLOW, userid });\nexport const unfollowSuccess = (userid) => ({ type: UNFOLLOW, userid });\nexport const setCurrentPage = (page) => ({ type: SET_CURRENT_PAGE, page });\nexport const setTotalUsersCount = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount });\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\nexport const toggleIsFollowingInProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_IN_PROGRESS, isFetching, userId });\nexport const setCurrentUsersList = (point) = ({ type: SET_CURRENT_USERS_LIST, point})\n\nexport const requestUsers = (page, pageSize) => async (dispatch) => {\n    dispatch(toggleIsFetching(true));\n    dispatch(setCurrentPage(page));\n    let data = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalUsersCount(data.totalCount));\n}\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleIsFollowingInProgress(true, userId));\n    let data = await apiMethod(userId)\n    if (data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleIsFollowingInProgress(false, userId));\n}\nexport const follow = (userId) => async (dispatch) => {\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n}\nexport const unfollow = (userId) => async (dispatch) => {\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n}\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}