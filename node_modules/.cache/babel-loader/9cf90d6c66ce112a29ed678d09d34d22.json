{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Users from './Users';\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, unfollowAC, setTotalUsersCountAC, toggleIsFetchingAC } from \"../../redux/users-reducer\";\nimport preloader from '../../assets/images/preloader.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      this.props.users = [];\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preloader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        users: this.props.users,\n        currentPage: this.props.currentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        onPageChanged: this.onPageChanged,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userid => {\n      dispatch(followAC(userid));\n    },\n    unfollow: userid => {\n      dispatch(unfollowAC(userid));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setTotalUsersCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","axios","Users","connect","followAC","setCurrentPageAC","setUsersAC","unfollowAC","setTotalUsersCountAC","toggleIsFetchingAC","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","toggleIsFetching","users","get","pageSize","then","response","setUsers","data","items","componentDidMount","currentPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Users from './Users'\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setUsersAC, unfollowAC, setTotalUsersCountAC, toggleIsFetchingAC } from \"../../redux/users-reducer\";\nimport preloader from '../../assets/images/preloader.svg';\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.toggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {    \n        this.props.toggleIsFetching(false);    \n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n         })\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.toggleIsFetching(true);\n        this.props.users = [];\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {    \n            this.props.toggleIsFetching(false);    \n            this.props.setUsers(response.data.items);\n         })\n    }\n\n    render() {\n        return (\n           <> \n           {this.props.isFetching ? <img src={preloader}/> : null}\n           <Users \n            users={this.props.users} \n            currentPage={this.props.currentPage} \n            totalUsersCount={this.props.totalUsersCount} \n            pageSize={this.props.pageSize}\n            onPageChanged={this.onPageChanged}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}/>\n            </>\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n      users: state.usersPage.users,\n      pageSize: state.usersPage.pageSize,\n      totalUsersCount: state.usersPage.totalUsersCount,\n      currentPage: state.usersPage.currentPage,\n      isFetching: state.usersPage.isFetching\n    }\n  }\n  let mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userid) => {\n            dispatch (followAC(userid));\n        },\n        unfollow: (userid) => {\n            dispatch (unfollowAC(userid));\n        },\n        setUsers: (users) => {\n            dispatch (setUsersAC(users));\n        },\n        setCurrentPage: (pageNumber) => {\n            dispatch(setCurrentPageAC(pageNumber))\n        },\n        setTotalUsersCount: (totalCount) => {\n            dispatch(setTotalUsersCountAC(totalCount))\n        },\n        toggleIsFetching: (isFetching) => {\n            dispatch(toggleIsFetchingAC(isFetching))\n        }\n    }\n  }\nexport default connect(mapStateToProps, mapDispatchToProps) (UsersContainer);"]},"metadata":{},"sourceType":"module"}