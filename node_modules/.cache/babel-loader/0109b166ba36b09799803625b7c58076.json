{"ast":null,"code":"var _jsxFileName = \"/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/hoc/withAuthNavigate.js\";\nimport React from \"react\";\nimport { Navigate, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToPropsFromNavigate = state => {\n  return {\n    isAuth: state.auth.isAuth,\n    id: state.auth.userId\n  };\n};\n\nexport const withAuthNavigate = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 44\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsFromNavigate)(RedirectComponent);\n  return ConnectedAuthNavigateComponent;\n};\nexport const profileWithAuthNavigate = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth && this.props.router.location.pathname === '/profile') return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: '/login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 98\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n  }\n\n  let ConnectedAuthNavigateComponent = connect(mapStateToPropsFromNavigate)(RedirectComponent);\n  return ConnectedAuthNavigateComponent;\n};\nexport const withRouter = Component => {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n};","map":{"version":3,"sources":["/Users/konstantin/Documents/Study/ReactJS/01/my-app/src/hoc/withAuthNavigate.js"],"names":["React","Navigate","useLocation","useNavigate","useParams","connect","mapStateToPropsFromNavigate","state","isAuth","auth","id","userId","withAuthNavigate","Component","RedirectComponent","render","props","ConnectedAuthNavigateComponent","profileWithAuthNavigate","router","location","pathname","withRouter","ComponentWithRouterProp","navigate","params"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,WAA/B,EAA4CC,SAA5C,QAA4D,kBAA5D;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,IAAIC,2BAA2B,GAAIC,KAAD,IAAW;AACzC,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD,MADhB;AAEHE,IAAAA,EAAE,EAAEH,KAAK,CAACE,IAAN,CAAWE;AAFZ,GAAP;AAIH,CALD;;AAMA,OAAO,MAAMC,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCd,KAAK,CAACa,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWR,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKQ;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAMhD,MAAIC,8BAA8B,GAAGZ,OAAO,CAACC,2BAAD,CAAP,CAAsCQ,iBAAtC,CAArC;AACA,SAAOG,8BAAP;AACH,CATM;AAWP,OAAO,MAAMC,uBAAuB,GAAIL,SAAD,IAAe;AAClD,QAAMC,iBAAN,SAAgCd,KAAK,CAACa,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWR,MAAZ,IAAsB,KAAKQ,KAAL,CAAWG,MAAX,CAAkBC,QAAlB,CAA2BC,QAA3B,KAAwC,UAAlE,EAA8E,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AAC9E,0BAAO,QAAC,SAAD,OAAe,KAAKL;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAJ2C;;AAMhD,MAAIC,8BAA8B,GAAGZ,OAAO,CAACC,2BAAD,CAAP,CAAsCQ,iBAAtC,CAArC;AACA,SAAOG,8BAAP;AACH,CATM;AAUP,OAAO,MAAMK,UAAU,GAAIT,SAAD,IAAe;AAAA;;AACrC,WAASU,uBAAT,CAAiCP,KAAjC,EAAwC;AAAA;;AACtC,QAAII,QAAQ,GAAGlB,WAAW,EAA1B;AACA,QAAIsB,QAAQ,GAAGrB,WAAW,EAA1B;AACA,QAAIsB,MAAM,GAAGrB,SAAS,EAAtB;AACA,wBACE,QAAC,SAAD,OACMY,KADN;AAEE,MAAA,MAAM,EAAE;AAAEI,QAAAA,QAAF;AAAYI,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB;AAFV;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAXoC,KAC5BF,uBAD4B;AAAA,YAEpBrB,WAFoB,EAGpBC,WAHoB,EAItBC,SAJsB;AAAA;;AAYrC,SAAOmB,uBAAP;AACD,CAbI","sourcesContent":["import React from \"react\";\nimport {Navigate, useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nlet mapStateToPropsFromNavigate = (state) => {\n    return {\n        isAuth: state.auth.isAuth,\n        id: state.auth.userId\n    }\n} \nexport const withAuthNavigate = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsFromNavigate) (RedirectComponent);\n    return ConnectedAuthNavigateComponent;\n}\n\nexport const profileWithAuthNavigate = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth && this.props.router.location.pathname === '/profile') return <Navigate to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    let ConnectedAuthNavigateComponent = connect(mapStateToPropsFromNavigate) (RedirectComponent);\n    return ConnectedAuthNavigateComponent;\n}\nexport const withRouter = (Component) => {\n    function ComponentWithRouterProp(props) {\n      let location = useLocation();\n      let navigate = useNavigate();\n      let params = useParams();\n      return (\n        <Component\n          {...props}\n          router={{ location, navigate, params }}\n        />\n      );\n    }\n    return ComponentWithRouterProp;\n  }"]},"metadata":{},"sourceType":"module"}